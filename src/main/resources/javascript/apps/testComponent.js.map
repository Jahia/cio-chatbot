{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/javascript/app/DxContext.jsx","webpack:///./src/main/javascript/app/gqlQueries.js","webpack:///./src/main/javascript/app/productbot/App.jsx","webpack:///./src/main/javascript/app/productbot/Conversation.jsx","webpack:///./src/main/javascript/app/productbot/Message.jsx","webpack:///./src/main/javascript/app/productbot/ProductList.jsx","webpack:///./src/main/javascript/app/productbot/main.jsx","webpack:///./src/main/javascript/app/productbot/products.jsx"],"names":["DxContext","React","createContext","gqlQueries","SITE_QUERY","PRODUCT_QUERY","App","props","state","conversationId","profileId","messageObjectList","handleSubmit","bind","handleRestart","$this","intervalWatson","setInterval","window","cxs","undefined","clearInterval","startWatson","dxContext","getFavoriteColor","then","responseJson","callWatson","data","favoriteColor","catch","error","console","log","fetch","servletContext","method","headers","body","JSON","stringify","query","variables","response","ok","reject","json","message","askEmail","sendMessage","date","Date","handleResponse","outputMessage","outputMessages","filter","text","join","outputDate","toLocaleTimeString","outputConversationId","setState","msgObj","position","hasTail","addMessage","canSearch","formatProducts","e","inputMessage","target","value","inputDate","formattedDate","element","document","getElementsByClassName","scrollTop","scrollHeight","scrollToBottom","componentDidMount","Component","Conversation","makeMessage","index","label","isValidElement","onRestart","map","onSubmit","Message","client","link","uri","cache","ProductList","watsonCall","paddingTop","fontSize","productBotComponentReactRender","id","ReactDOM","render","getElementById","Products","grantedConsent","displayModal","consents","keys","Object","length","status","hasGrantedConsent","consentText","shouldDisplayModal","manageWemPrivacy","privacyHandler","set","obj","prop","oldVal","Proxy","newProps","fetchProducts","loading","prods","products","prodIndex","findIndex","prod","outOfStock","dxContexts","sku","vanityUrl","images","url","name","price","formattedValue","ProductsQuery","graphql","options","withApollo"],"mappings":"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","file":"testComponent.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"testComponent\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors-chatbot\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\n\nconst DxContext = React.createContext();\n\nexport {DxContext};","import gql from 'graphql-tag';\n\nconst gqlQueries = {\n    SITE_QUERY: gql`query Sites($path: String!){\n        jcr {\n            nodeByPath(path: $path) {\n              displayName  \n              name\n              path\n              children {\n                nodes {\n                  displayName\n                  name\n                }\n              }\n            }\n          }\n    }`\n\t\n/* \t,Watson_QUERY: gql`query watson($message: String!,$conversationId : String){\n\t\tsendMessage(message:$message, conversationId:$conversationId){\n\t\t\tconversationId\n\t\t\tentities\n\t\t\tintents\n\t\t\toutputMessages\n\t\t}\n\t}` */\n\n\t,PRODUCT_QUERY: gql`query productList($conversationId : String!, $profileId : String) {\n\t\t  products(conversationId : $conversationId, limit:9, offset:0, profileId : $profileId ) {\n\t\t\tsku\n\t\t\tname\n\t\t\tmountedPath\n\t\t\tvanityUrl\n\t\t\tcode\n\t\t\toutOfStock\n\t\t\timages {\n\t\t\t  altText\n\t\t\t  format\n\t\t\t  imageType\n\t\t\t  url\n\t\t\t}\n\t\t\tprice{\n\t\t\t\tformattedValue\n\t\t\t}\n\t\t}\n\t}`\t\n};\n\nexport default gqlQueries;","import React from 'react';\nimport Conversation from './Conversation.jsx';\nimport ProductList from './ProductList.jsx';\nimport _ from 'lodash';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            conversationId   : null,\n            profileId        : null,\n            // A Message Object consists of a message[, intent, date, isUser]\n            messageObjectList: []\n        };\n\n        this.handleSubmit  = this.handleSubmit.bind(this);\n        this.handleRestart = this.handleRestart.bind(this);\n    }\n\n    componentDidMount() {\n        // Todo: Call grapqhql entry point for favoriteColor (when window.cxs (CDP profile) is available). This will give context for the style.\n        var $this = this;\n        var intervalWatson = setInterval(function () {\n            if (window.cxs !== undefined) {\n                clearInterval(intervalWatson);\n                $this.startWatson();\n            }\n        }, 100);\n\n    }\n\n    startWatson() {\n        if (window.cxs !== undefined && window.cxs.profileId !== undefined) {\n            this.props.dxContext.profileId = window.cxs.profileId;\n\n            this.getFavoriteColor(window.cxs.profileId).then((responseJson) => {\n                this.callWatson('hello', responseJson.data.favoriteColor, false);\n            }).catch(function (error) {\n                throw error;\n            });\n\n        }\n    }\n\n    getFavoriteColor(profileId) {\n        console.log(profileId);\n        return fetch(this.props.dxContext.servletContext + '/modules/graphql',\n            {\n                method : 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body   : JSON.stringify({\n                        query    : `query ($profileId: String!){\n\t\t\t\t\t\t\tfavoriteColor(profileId:$profileId)\t\n\t\t\t\t\t\t}`,\n                        variables: {\n                            profileId: profileId\n                        }\n                    }\n                )\n            }).then((response) => {\n            console.log(response);\n            if (!response.ok) {\n                return reject(response);\n            }\n\n            return response.json();\n        });\n    }\n\n    callWatson(message, favoriteColor, askEmail) {\n        console.log(\"Calling watson\", favoriteColor);\n        fetch(this.props.dxContext.servletContext + '/modules/graphql',\n            {\n                method : 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body   : JSON.stringify({\n                        query    : `query ($message: String!,$conversationId : String,$favoriteColor : String){\n                            sendMessage(message:$message, conversationId:$conversationId,favoriteColor:$favoriteColor){\n                                conversationId\n                                entities{\n                                    name\n                                    value\n                                    confidence\n                                }\n                                intents\n                                outputMessages\n                                canSearch\n                            }\n                        }`,\n                        variables: {\n                            message       : message,\n                            conversationId: this.state.conversationId,\n                            favoriteColor : favoriteColor,\n                            askEmail : askEmail\n                        }\n                    }\n                )\n            }).then((response) => {\n            if (!response.ok) {\n                return reject(response);\n            }\n\n            return response.json();\n        }).then((responseJson) => {\n\n            responseJson.data.sendMessage.date = new Date();\n            this.handleResponse(responseJson.data.sendMessage);\n        }).catch(function (error) {\n            throw error;\n        });\n    }\n\n    handleResponse(responseJson) {\n        const outputMessage = responseJson.outputMessages.filter(text => text).join('\\n');\n        /*        const outputIntent         = responseJson.intents[0]; */\n        const outputDate           = responseJson.date.toLocaleTimeString();\n        const outputConversationId = responseJson.conversationId;\n        this.setState({\n            conversationId: outputConversationId\n        });\n        const msgObj = {\n            position: 'left',\n            /*             label   : outputIntent, */\n            message : outputMessage,\n            date    : outputDate,\n            hasTail : true\n        };\n        this.addMessage(msgObj);\n        if (responseJson.canSearch) {\n            this.formatProducts(outputConversationId);\n        }\n    }\n\n    addMessage(msgObj) {\n        this.setState({\n            messageObjectList: [...this.state.messageObjectList, msgObj]\n        });\n    }\n\n    handleSubmit(e) {\n        const inputMessage = e.target.value;\n        if (e.target.value == \"\") {\n            return;\n        }\n        const inputDate     = new Date();\n        const formattedDate = inputDate.toLocaleTimeString();\n        const msgObj        = {\n            position: 'right',\n            message : inputMessage,\n            date    : formattedDate,\n            hasTail : true\n        };\n        this.addMessage(msgObj);\n        e.target.value = '';\n        this.callWatson(inputMessage);\n    }\n\n    scrollToBottom() {\n        const element     = document.getElementsByClassName('conversation__messages')[0];\n        element.scrollTop = element.scrollHeight;\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    formatProducts(conversationId) {\n        console.log(\"rendering products\", this.state.messageObjectList);\n\n        this.setState({\n            conversationId   : conversationId,\n            profileId        : (!_.isUndefined(window.cxs) ? window.cxs.profileId : null),\n            messageObjectList: this.state.messageObjectList\n        });\n    }\n\n    handleRestart() {\n        this.setState({\n            conversationId   : null,\n            profileId        : null,\n            // A Message Object consists of a message[, intent, date, isUser]\n            messageObjectList: []\n        }, function () {\n            this.componentDidMount();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <Conversation\n                    onSubmit={this.handleSubmit}\n                    onRestart={this.handleRestart}\n                    messageObjectList={this.state.messageObjectList}\n                />\n                <div className=\"watson_result\">\n                    <ProductList dxContext={this.props.dxContext}\n                                 conversationId={this.state.conversationId}\n                                 profileId={this.state.profileId}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport { InputWithButton } from 'watson-react-components';\nimport Message from './Message.jsx';\n\nfunction Conversation(props) {\n\n  function makeMessage(msgObj, index) {\n\n    if (typeof msgObj.message === 'string') {\n      return (\n        <Message key={index} position={msgObj.position || false} label={msgObj.label || false} date={msgObj.date || false} message={msgObj.message} hasTail={msgObj.hasTail || false}/>\n      );\n    } else if ( React.isValidElement(msgObj.message)) {\n      return ( msgObj.message );\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <div className=\"conversation\">\n        <div className=\"conversation__disclaimer--message\">\n            <i className=\"fas fa-comments\"></i>\n            <button onClick={props.onRestart} ><i className=\"fas fa-sync-alt\"></i></button>\n        </div>\n\n      <div className=\"conversation__messages\">\n        <div>\n          {props.messageObjectList.map(makeMessage)}\n        </div>\n      </div>\n\n        <div className=\"conversation__input-container\">\n          <InputWithButton className=\"conversation__input\" onSubmit={props.onSubmit} placeholder=\"Say something to Watson.\"/>\n        </div>\n\n    </div>\n  );\n}\n\nexport default Conversation;\n","import React from 'react';\n\nfunction Message(props) {\n  return (\n    <div className={props.position === 'right' ? 'message message--from-right' : 'message message--from-left'}>\n      {props.label ? <div className=\"message__label\">{props.label}</div> : false}\n      <div className=\"message__content\">{props.message}</div>\n      {props.hasTail ? (\n        <div className=\"message__tail\">\n          <div className=\"message__tail-background\"></div>\n          <div className=\"message__tail-foreground\"></div>\n        </div>\n      ) : false}\n      {props.date ? <div className=\"message__date\">{props.date}</div> : false}\n    </div>\n  );\n}\n\nexport default Message;\n","import React from \"react\";\nimport {I18nextProvider} from 'react-i18next';\nimport {ApolloProvider} from 'react-apollo';\nimport {DxContext} from \"../DxContext.jsx\";\nimport Products from './products.jsx';\nimport {ApolloClient} from \"apollo-client\";\nimport {HttpLink} from \"apollo-link-http\";\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\nimport _ from \"lodash\";\n\n\nconst client = (props => {\n    const link = new HttpLink({\n        uri: props.dxContext.servletContext + '/modules/graphql'\n    });\n\n    return new ApolloClient({\n        link: link,\n        cache: new InMemoryCache()\n    });\n});\n\nclass ProductList extends React.Component {\n\n    render() {\n\t\t\n        let {dxContext, conversationId, profileId, watsonCall} = this.props;\n        return <ApolloProvider client={client(this.props)}>\n                        <DxContext.Provider value={dxContext}>\n                            { _.isNil(conversationId) || _.isNil(profileId) ?\n                                (<span style={{paddingTop:35, fontSize:69}}><i className=\"fas fa-box\"></i></span>)\n                                :\n                                (<Products dxContext={dxContext}\n                                           conversationId={conversationId}\n                                           profileId={profileId} watsonCall={watsonCall}/>)\n                            }\n                        </DxContext.Provider>\n                </ApolloProvider>\n    }\n\n}\n\nexport default ProductList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nwindow.productBotComponentReactRender = function(target, id, dxContext) {\n    ReactDOM.render(<App id={id} dxContext={dxContext}/>, document.getElementById(target));\n};","import React from \"react\";\nimport gqlQueries from \"../gqlQueries\";\nimport {graphql} from \"react-apollo/index\";\nimport {withApollo} from \"react-apollo\";\nimport {Col, Grid, Row} from 'react-bootstrap';\n\nclass Products extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let grantedConsent = false;\n        let displayModal   = false;\n        if (window.cxs !== undefined && window.cxs.consents !== undefined) {\n            const consents = window.cxs.consents;\n            let keys       = Object.keys(consents);\n            if (keys.length > 0) {\n                if (consents[\"apparel-uk/outofstock\"] !== undefined) {\n                    // Check if consent is granted or not\n                    grantedConsent = (consents[\"apparel-uk/outofstock\"].status === \"GRANTED\");\n                } else {\n                    displayModal = true;\n                }\n            } else {\n                displayModal = true;\n            }\n        }\n        this.state = {\n            hasGrantedConsent : grantedConsent,\n            consentText       : (grantedConsent ? \"You have consented to the usage of your email to receive information about product out of stock.\" : \"You have not consented to the usage of your email to receive information about product out of stock.\"),\n            shouldDisplayModal: displayModal\n        };\n        var $this  = this;\n        if (window.manageWemPrivacy !== undefined) {\n            let privacyHandler      = {\n                set: function (obj, prop, value) {\n                    console.log(\"calling proxy setter\", prop, value);\n                    let oldVal = obj[prop];\n                    if (prop === \"modelAlreadyOpen\" && value !== oldVal) {\n                        if (window.cxs !== undefined && window.cxs.consents !== undefined) {\n                            const consents = window.cxs.consents;\n                            let keys       = Object.keys(consents);\n                            if (keys.length > 0) {\n                                if (consents[\"apparel-uk/outofstock\"] !== undefined) {\n                                    // Check if consent is granted or not\n                                    let consentText = \"You have not consented to the usage of your email to receive information about product out of stock.\";\n                                    if (consents[\"apparel-uk/outofstock\"].status === \"GRANTED\") {\n                                        consentText = \"You have consented to the usage of your email to receive information about product out of stock.\";\n                                    }\n                                    $this.setState({\n                                        hasGrantedConsent : consents[\"apparel-uk/outofstock\"].status === \"GRANTED\",\n                                        consentText       : consentText,\n                                        shouldDisplayModal: false\n                                    })\n                                }\n                            }\n                        }\n                    }\n                    obj[prop] = value;\n                }\n            };\n            window.manageWemPrivacy = new Proxy(window.manageWemPrivacy, privacyHandler);\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (!newProps.fetchProducts.loading) {\n            const prods = newProps.fetchProducts.products ? newProps.fetchProducts.products : [];\n            const prodIndex = prods.findIndex(function(prod){\n                return prod.outOfStock;\n            });\n            if(prodIndex > -1){\n                console.log(prods[prodIndex]);\n                this.setState({\n                    dxContexts: {\n                        askEmail : true\n                    }\n                });\n            }\n        }\n    }\n\n    render() {\n\n        if (this.props.fetchProducts.error) {\n            return this.props.fetchProducts.error.message;\n        }\n\n        const prods = this.props.fetchProducts.products ? this.props.fetchProducts.products : [];\n\n        // if (this.state.shouldDisplayModal && window.manageWemPrivacyInstances !== undefined) {\n        //     let privacyInstance          = window.manageWemPrivacyInstances[Object.keys(window.manageWemPrivacyInstances)[0]];\n        //     privacyInstance.captiveModal = true;\n        //     privacyInstance.openModal(true);\n        // }\n\n        return <Grid className=\"product-container\" fluid={true}>\n            <Row className=\"product-row\">\n                <Col xs={12} md={12} lg={12}>\n                    <div\n                        className={this.state.hasGrantedConsent ? \"alert alert-success\" : \"alert alert-warning\"}>\n                        {this.state.consentText}\n                        </div>\n                </Col>\n            </Row>\n            <Row className=\"product-row\">\n                {\n                    prods.map((prod) => (\n                        <Col xs={6} md={4} lg={4} key={prod.sku}>\n\t\t\t\t\t\t<a href={\"https://demo.commerceio.jahia.com\" + prod.vanityUrl} target=\"_blank\"> \n                            <div className=\"product-card\">\n                                <div className=\"product\">\n                                    <Row className=\"product-row product-header\">\n                                        <Col xs={12} className=\"product-match-high\">High\n                                            Match</Col>\n                                    </Row>\n                                    <Row className=\"product-row\">\n                                        <Col xs={12} className=\"product-img-wrapper\">\n                                            <img className=\"product-img\"\n                                                 src={\"https://demo.commerceio.jahia.com\" + prod.images[1].url}/>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"product-row\">\n                                        <div className=\"product-name-wrapper\">\n                                            <Col xs={12} className=\"product-name\">\n                                                <span>{prod.name} {prod.outOfStock ? \"Out Of Stock\" : \"\"}</span>\n                                            </Col>\n                                            <Col xs={12} className=\"product-price\">\n                                                <span>{prod.price.formattedValue}</span>\n                                            </Col>\n                                        </div>\n                                    </Row>\n                                </div>\n                            </div>\n\t\t\t\t\t\t</a>\n                        </Col>\n                    ))\n                }\n            </Row>\n        </Grid>\n    }\n}\n\nconst ProductsQuery = graphql(gqlQueries.PRODUCT_QUERY, {\n    name: 'fetchProducts',\n    options(props) {\n        return {\n            variables: {\n                \"conversationId\": props.conversationId,\n                \"profileId\"     : props.profileId\n            }\n        }\n    }\n});\n\nexport default withApollo(ProductsQuery(Products));"],"sourceRoot":""}